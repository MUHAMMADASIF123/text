{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","title","type","id","TextForm","useState","text","setText","value","onChange","event","console","log","target","rows","onClick","newtext","toUpperCase","toLowerCase","replace","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iLAMe,SAASA,EAAOC,GAC7B,OAEE,qBAAKC,UAAU,8CAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,SACGF,EAAMG,QAET,wBACEF,UAAU,iBACVG,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMH,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,SACE,oBAAIJ,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOC,KAAK,IAAxD,6B,WCzBC,SAASI,EAASN,GAC/B,MAAwBO,mBAAS,aAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAiCA,OACE,qCACA,qBAAKR,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,6BAAKD,EAAMG,QACX,0BACEF,UAAU,eACVS,MAAOF,EACPH,GAAG,QAAQM,SAhCE,SAACC,GACpBC,QAAQC,IAAI,aACZL,EAAQG,EAAMG,OAAOL,QA+BfM,KAAK,MAEP,wBAAQf,UAAU,uBAAuBgB,QA3C7B,WAChB,IAAIC,EAAUV,EAAKW,cACnBV,EAAQS,IAyCJ,+BAGA,wBAAQjB,UAAU,uBAAuBgB,QA1C7B,WAChB,IAAIC,EAAUV,EAAKY,cACnBX,EAAQS,IAwCJ,+BAGA,wBAAQjB,UAAU,uBAAuBgB,QArCjC,WAEZR,EADc,KAoCV,wBAGA,wBAAQR,UAAU,uBAAuBgB,QA5BtB,WAGvB,IAAIC,EAASV,EAAKa,QAAQ,MAAO,KACjCZ,EAAQS,IAwBJ,iCAGA,wBAAQjB,UAAU,uBAAuBgB,QAtC9B,WACfJ,QAAQC,IAAI,gBACZ,IAAIN,EAAKc,SAASC,eAAe,SACjCf,EAAKgB,SACLhB,EAAKiB,kBAAkB,EAAE,MACzBC,UAAUC,UAAUC,UAAUpB,EAAKE,QAiC/B,uBAMJ,qBAAKT,UAAU,YAAf,SACJ,8BAAIO,EAAKqB,MAAM,KAAKC,OAApB,cAAuCtB,EAAKsB,OAA5C,qBC3CeC,MAVf,WACE,OACC,qCACH,cAAChC,EAAD,CAAQI,MAAM,cACd,cAACG,EAAD,CAAUH,MAAM,yCCND6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASC,eAAe,SAM1BS,K","file":"static/js/main.3db48bd4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from \"react-router-dom\";\r\n// import { Router } from \"react-router\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    \r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            \r\n          </ul>\r\n         \r\n        </div>\r\n      </div>\r\n    </nav>\r\n  \r\n  );\r\n  \r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  \r\n};\r\n","import { useState } from \"react\";\r\n//import PropTypes from 'prop-types';\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"your text\");\r\n  const upperCase = () => {\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n  };\r\n  const lowerCase = () => {\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n  };\r\n  const handleChange = (event) => {\r\n    console.log(\"on change\");\r\n    setText(event.target.value);\r\n  };\r\n  const clear = () => {\r\n    let newtext = '';\r\n    setText(newtext);\r\n  }\r\n \r\n  const copyText = () => {\r\n    console.log(\"i am copying\");\r\n    var text=document.getElementById('mybox');\r\n    text.select();\r\n    text.setSelectionRange(0,9999);\r\n    navigator.clipboard.writeText(text.value);\r\n  }\r\n  const removeExtraSpace = () => {\r\n    // let newtext = text.replace('');\r\n    // let newtext=text.replace(/\\s{2,}/g, '').trim();\r\n    let newtext= text.replace(/ +/g, ' ');\r\n    setText(newtext);\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n      <div className=\"mb-3\">\r\n        <h1>{props.title}</h1>\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          id=\"mybox\" onChange={handleChange}\r\n          rows=\"8\"\r\n        ></textarea>\r\n        <button className=\"btn btn-primary mx-2\" onClick={upperCase}>\r\n          Convert UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={lowerCase}>\r\n          Convert LowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={clear}>\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={removeExtraSpace}>\r\n          RemoveExtraSpapaces\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={copyText}>\r\n          copy\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"container\">\r\n<p>{text.split(\" \").length} words and {text.length}characters</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n   <>\n<Navbar title=\"TextUtils\"></Navbar>\n<TextForm title=\"Enter your text to Analyze Below\"></TextForm>\n{/* <Alert alert=\"heloo\"></Alert> */}\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}